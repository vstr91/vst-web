<?php

namespace Circular\SiteBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ParadaItinerarioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ParadaItinerarioRepository extends EntityRepository
{
    
    public function listarTodosREST($limite = null, $dataUltimoAcesso){
        $qb = $this->createQueryBuilder('pi')
                ->select('pi.id, p.id AS parada, i.id AS itinerario, pi.ordem, pi.status, pi.destaque, pi.valor')
                //->select('p')
                ->distinct()
                ->leftJoin("CircularSiteBundle:Parada", "p", "WITH", "p.id = pi.parada")
                ->leftJoin("CircularSiteBundle:Itinerario", "i", "WITH", "i.id = pi.itinerario")
                ->where("pi.ultimaAlteracao > :ultimaAlteracao")
                ->setParameter('ultimaAlteracao', $dataUltimoAcesso)
                //->leftJoin("CircularSiteBundle:ParadaItinerario", "pi", "WITH", "pi.parada = p.id")
                ->addOrderBy('pi.id');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }
    
    public function invalidaTodasParadasItinerario($id_itinerario){
        
        $qb = $this->createQueryBuilder('pit')
                ->update("CircularSiteBundle:ParadaItinerario", 'pit')
                ->set('pit.status', 2)
                ->set('pit.ultimaAlteracao', ':now')
                ->where('pit.itinerario = :id_itinerario')
                ->setParameter('now', new \DateTime())
                ->setParameter('id_itinerario', $id_itinerario);

        $qb->getQuery()->getResult();
        
        return true;
        
    }
    
}
