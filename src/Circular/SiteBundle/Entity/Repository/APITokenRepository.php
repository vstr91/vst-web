<?php

namespace Circular\SiteBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * APITokenRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class APITokenRepository extends EntityRepository
{
    
    public function listarUltimosAcessos($limite = null){
        $qb = $this->createQueryBuilder('t')
//                ->select('b.id, b.nome, b.status, l.id AS local')
                ->select('t')
                ->distinct()
                ->addOrderBy('t.dataCriacao', 'DESC');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }
    
    public function validaToken($token){
        $qb = $this->createQueryBuilder('t')
                ->select('t')
                ->distinct()
                ->where('t.puroTexto = :token')
                ->andWhere('t.dataCriacao > :data')
                ->andWhere('t.dataValidacao IS NULL')
                ->addOrderBy('t.dataCriacao', 'DESC')
                ->setParameter('token', $token)
                ->setParameter('data', new \DateTime('-2 minutes'))
                ;
        
        return $qb->getQuery()->getResult();
        
    }
    
    public function atualizaToken($token){
        $qb = $this->createQueryBuilder('t')
                ->update('CircularSiteBundle:APIToken t')
                ->set('t.dataValidacao', ':data')
                ->where('t.puroTexto = :token')
                ->setParameter('token', $token)
                ->setParameter('data', new \DateTime())
                ;
        
        return $qb->getQuery()->execute();
        
    }
    
}
