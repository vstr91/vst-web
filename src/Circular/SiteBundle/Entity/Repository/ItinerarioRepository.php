<?php

namespace Circular\SiteBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ItinerarioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ItinerarioRepository extends EntityRepository
{
    
    public function listarTodos($limite = null){
        $qb = $this->createQueryBuilder('i')
                ->select('i.id', 'bp.nome AS partida', 'bd.nome AS destino', 'i.valor')
                //->select('p')
                ->distinct()
                ->leftJoin("VostreLocalBundle:Bairro", "bp", "WITH", "bp.id = i.partida")
                ->leftJoin("VostreLocalBundle:Bairro", "bd", "WITH", "bd.id = i.destino")
                //->leftJoin("CircularSiteBundle:ParadaItinerario", "pi", "WITH", "pi.parada = p.id")
                ->addOrderBy('bp.nome');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }   
    
    public function listarTodosREST($limite = null, $dataUltimoAcesso){
        $qb = $this->createQueryBuilder('i')
                ->select('i.id', 'bp.id AS partida', 'bd.id AS destino', 'e.id AS empresa',
                        'i.distancia', 'i.status', 'i.valor', 'i.observacao')
                //->select('p')
                ->distinct()
                ->leftJoin("VostreLocalBundle:Bairro", "bp", "WITH", "bp.id = i.partida")
                ->leftJoin("VostreLocalBundle:Bairro", "bd", "WITH", "bd.id = i.destino")
                ->leftJoin("CircularSiteBundle:Empresa", "e", "WITH", "e.id = i.empresa")
                ->where("i.ultimaAlteracao > :ultimaAlteracao")
                ->setParameter('ultimaAlteracao', $dataUltimoAcesso)
                //->leftJoin("CircularSiteBundle:ParadaItinerario", "pi", "WITH", "pi.parada = p.id")
                ->addOrderBy('i.id');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }
    
    public function listarTodosHorarios($itinerario, $limite = null){
        $qb = $this->createQueryBuilder('i')
                ->select('h.id', 'h.nome AS horario')
                //->select('p')
                ->distinct()
                ->leftJoin("CircularSiteBundle:HorarioItinerario", "hi", "WITH", "hi.itinerario = i.id")
                ->leftJoin("CircularSiteBundle:Horario", "h", "WITH", "h.id = hi.horario")
                ->andWhere('i.id = :itinerario')
                ->setParameter('itinerario', $itinerario)
                ->addOrderBy('h.nome');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    } 
    
}
