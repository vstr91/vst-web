<?php

namespace Circular\SiteBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EmpresaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmpresaRepository extends EntityRepository
{
    
    public function listarTodosREST($limite = null, $dataUltimoAcesso){
        $qb = $this->createQueryBuilder('e')
//                ->select('b.id, b.nome, b.status, l.id AS local')
                ->select('e')
                ->distinct()
//                ->leftJoin("CircularSiteBundle:Local", "l", "WITH", "l.id = b.local")
                ->where("e.ultimaAlteracao > :ultimaAlteracao")
                ->setParameter('ultimaAlteracao', $dataUltimoAcesso)
                ->addOrderBy('e.id');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }
    
    public function listarRegistrosVinculados($empresa){
        $qb = $this->createQueryBuilder('e')
                ->select('COUNT(i.id) AS total')
                //->select('p')
                ->distinct()
                ->innerJoin("CircularSiteBundle:Itinerario", "i", "WITH", "i.empresa = e.id")
                ->andWhere('e.id = :id_empresa')
                ->setParameter('id_empresa', $empresa->getId())
                ;
        
        return $qb->getQuery()->getOneOrNullResult();
        
    }
    
    public function listarRegistrosAtivosVinculados(){
        $qb = $this->createQueryBuilder('e')
                ->select('COUNT(DISTINCT e.id) AS total')
                //->select('p')
//                ->distinct()
                ->innerJoin("CircularSiteBundle:Itinerario", "i", "WITH", "i.empresa = e.id")
                ;
        
        return $qb->getQuery()->getOneOrNullResult();
        
    }
    
}
