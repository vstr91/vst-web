<?php

namespace Vostre\LocalBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EstadoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EstadoRepository extends EntityRepository
{
    
    public function listarTodosREST($limite = null, $dataUltimoAcesso){
        
//        $subquery = $this->createQueryBuilder('l1')
//                ->select('IDENTITY(l.estado)')
//                ->from("VostreLocalBundle:Local", 'l')
//                ->where('l.status = 0')
//                ->getDQL();
        
        $qb = $this->createQueryBuilder('e')
                ->select('e.id, e.nome, e.sigla, e.status, p.id AS pais')
                ->distinct()
                ->leftJoin("VostreLocalBundle:Pais", "p", "WITH", "p.id = e.pais")
//                ->where($this->createQueryBuilder('e2')->expr()->in('e.id', $subquery))
                ->andWhere("e.ultimaAlteracao > :ultimaAlteracao")
                ->setParameter('ultimaAlteracao', $dataUltimoAcesso)
                ->addOrderBy('e.id');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }
    
    public function listarRegistrosAtivosVinculados(){
        $qb = $this->createQueryBuilder('e')
                ->select('COUNT(DISTINCT e.id) AS total')
                //->select('p')
//                ->distinct()
                ->innerJoin("VostreLocalBundle:Local", "l", "WITH", "l.estado = e.id")
                ->innerJoin("VostreLocalBundle:Bairro", "b", "WITH", "b.local = l.id")
                ->innerJoin("CircularSiteBundle:Parada", "p", "WITH", "p.bairro = b.id")
                ->innerJoin("CircularSiteBundle:ParadaItinerario", "pit", "WITH", "pit.parada = p.id")
                ;
        
        return $qb->getQuery()->getOneOrNullResult();
        
    }
    
}
