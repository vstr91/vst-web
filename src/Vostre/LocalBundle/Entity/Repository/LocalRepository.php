<?php

namespace Vostre\LocalBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * LocalRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LocalRepository extends EntityRepository
{
    
    public function listarTodosREST($limite = null, $dataUltimoAcesso){
        
//        $subquery = $this->createQueryBuilder('l1')
//                ->select('IDENTITY(b.local)')
//                ->from("VostreLocalBundle:Bairro", 'b')
//                ->where('b.status = 0')
//                ->getDQL();
        
        $qb = $this->createQueryBuilder('l')
                ->select('l.id, l.nome, l.tipo, l.status, e.id AS estado, c.id AS cidade')
                ->distinct()
                ->leftJoin("VostreLocalBundle:Estado", "e", "WITH", "e.id = l.estado")
                ->leftJoin("VostreLocalBundle:Local", "c", "WITH", "c.id = l.cidade")
//                ->where($this->createQueryBuilder('e2')->expr()->in('l.id', $subquery))
                ->andWhere("l.ultimaAlteracao > :ultimaAlteracao")
                ->setParameter('ultimaAlteracao', $dataUltimoAcesso)
                ->addOrderBy('l.id');
        
        if(false == is_null($limite)){
            $qb->setMaxResults($limite);
        }
        
        return $qb->getQuery()->getResult();
        
    }
    
    public function listarTodosVinculados(){
        
        $subquery = $this->createQueryBuilder('b')
                ->select('IDENTITY(b2.local)')
                ->distinct()
                ->innerJoin("VostreLocalBundle:Bairro", 'b2', "WITH", "b2.local = b.id")
                ->innerJoin("CircularSiteBundle:Itinerario", 'i', "WITH", "b2.id = i.partida")
                ->where('i.status = 0')
                ->getDQL();
        
        $qb = $this->createQueryBuilder('l')
                //->select('l.id, l.nome, l.tipo, l.status, e.id AS estado, c.id AS cidade')
                ->select('l')
                ->distinct()
                ->leftJoin("VostreLocalBundle:Estado", "e", "WITH", "e.id = l.estado")
                ->leftJoin("VostreLocalBundle:Local", "c", "WITH", "c.id = l.cidade")
                ->where($this->createQueryBuilder('l1')->expr()->in('l.id', $subquery))
                ->addOrderBy('l.nome');

        //die(var_dump($qb));
        
        return $qb;//->getQuery()->getResult();
        
    }
    
    public function listarRegistrosAtivosVinculados(){
        $qb = $this->createQueryBuilder('l')
                ->select('COUNT(DISTINCT l.id) AS total')
                //->select('p')
//                ->distinct()
                ->innerJoin("VostreLocalBundle:Bairro", "b", "WITH", "b.local = l.id")
                ->innerJoin("CircularSiteBundle:Parada", "p", "WITH", "p.bairro = b.id")
                ->innerJoin("CircularSiteBundle:ParadaItinerario", "pit", "WITH", "pit.parada = p.id")
                ;
        
        return $qb->getQuery()->getOneOrNullResult();
        
    }
    
}
