<?php

namespace Proxies\__CG__\Vostre\CentralBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Recado extends \Vostre\CentralBundle\Entity\Recado implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'titulo', 'descricao', 'dataCadastro', 'dataInicial', 'dataFinal', 'usuarioCadastro', 'usuarioDestinatario', 'lido');
        }

        return array('__isInitialized__', 'id', 'titulo', 'descricao', 'dataCadastro', 'dataInicial', 'dataFinal', 'usuarioCadastro', 'usuarioDestinatario', 'lido');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Recado $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitulo($titulo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitulo', array($titulo));

        return parent::setTitulo($titulo);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitulo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitulo', array());

        return parent::getTitulo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescricao($descricao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescricao', array($descricao));

        return parent::setDescricao($descricao);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescricao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescricao', array());

        return parent::getDescricao();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataCadastro($dataCadastro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataCadastro', array($dataCadastro));

        return parent::setDataCadastro($dataCadastro);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataCadastro()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataCadastro', array());

        return parent::getDataCadastro();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataInicial($dataInicial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataInicial', array($dataInicial));

        return parent::setDataInicial($dataInicial);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataInicial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataInicial', array());

        return parent::getDataInicial();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataFinal($dataFinal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataFinal', array($dataFinal));

        return parent::setDataFinal($dataFinal);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataFinal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataFinal', array());

        return parent::getDataFinal();
    }

    /**
     * {@inheritDoc}
     */
    public function setLido($lido)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLido', array($lido));

        return parent::setLido($lido);
    }

    /**
     * {@inheritDoc}
     */
    public function getLido()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLido', array());

        return parent::getLido();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsuarioCadastro(\Vostre\CentralBundle\Entity\Usuario $usuarioCadastro = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsuarioCadastro', array($usuarioCadastro));

        return parent::setUsuarioCadastro($usuarioCadastro);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsuarioCadastro()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsuarioCadastro', array());

        return parent::getUsuarioCadastro();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsuarioDestinatario(\Vostre\CentralBundle\Entity\Usuario $usuarioDestinatario = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsuarioDestinatario', array($usuarioDestinatario));

        return parent::setUsuarioDestinatario($usuarioDestinatario);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsuarioDestinatario()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsuarioDestinatario', array());

        return parent::getUsuarioDestinatario();
    }

}
